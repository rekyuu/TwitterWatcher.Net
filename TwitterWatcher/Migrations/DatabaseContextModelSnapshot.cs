// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TwitterWatcher.Models;

#nullable disable

namespace TwitterWatcher.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TwitterWatcher.Models.Artist", b =>
                {
                    b.Property<string>("TwitterId")
                        .HasColumnType("text")
                        .HasColumnName("twitter_id")
                        .HasAnnotation("Relational:JsonPropertyName", "twitter_id");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active")
                        .HasAnnotation("Relational:JsonPropertyName", "is_active");

                    b.Property<DateTimeOffset>("LastMediaTweetTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_media_tweet_time")
                        .HasAnnotation("Relational:JsonPropertyName", "last_media_tweet_time");

                    b.Property<DateTimeOffset>("LastProcessedTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_processed_time")
                        .HasAnnotation("Relational:JsonPropertyName", "last_processed_time");

                    b.Property<string>("LastProcessedTweetId")
                        .HasColumnType("text")
                        .HasColumnName("last_processed_tweet_id")
                        .HasAnnotation("Relational:JsonPropertyName", "last_processed_tweet_id");

                    b.Property<DateTimeOffset>("LastTweetTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_tweet_time")
                        .HasAnnotation("Relational:JsonPropertyName", "last_tweet_time");

                    b.Property<string>("Username")
                        .HasColumnType("text")
                        .HasColumnName("username")
                        .HasAnnotation("Relational:JsonPropertyName", "username");

                    b.Property<string[]>("UsernameHistory")
                        .HasColumnType("text[]")
                        .HasColumnName("username_history")
                        .HasAnnotation("Relational:JsonPropertyName", "username_history");

                    b.HasKey("TwitterId")
                        .HasName("pk_artists");

                    b.ToTable("artists", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
